require('dotenv').config();
var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');
const { sequelize } = require('./models/index');
const passport = require('passport');
require('./config/passport')(passport);
const routes = require('./modules/index')
const cors = require('cors');
const startBot = require('./bot/index')


var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');
app.use(cors())
app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));
app.use(passport.initialize());

app.use('/api', routes);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});



sequelize.authenticate()
  .then(() => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –û–ø—Ü–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:
    const syncOptions = {
      // alter: true - –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ! –ú–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
      alter: process.env.NODE_ENV === 'development', // —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
      // force: false - –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ force –≤ production!
      logging: console.log // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
    };
    
    return sequelize.sync(syncOptions);
  })
  .then(() => {
    console.log('üîÑ –ú–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –ë–î');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã/–∏–∑–º–µ–Ω–µ–Ω—ã
    return sequelize.query("SELECT table_name FROM information_schema.tables WHERE table_schema='public'");
  })
  .then(([results]) => {
    console.log('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î:');
    console.log(results.map(r => r.table_name).join(', '));
  })
  .catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', err.message);
    console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', err.parent?.code || 'N/A');
    console.error('SQL –∑–∞–ø—Ä–æ—Å:', err.sql || 'N/A');
    
    // –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
    if (process.env.NODE_ENV === 'production') {
      process.exit(1);
    }
  });

app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

startBot()

module.exports = app;
